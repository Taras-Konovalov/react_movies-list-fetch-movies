{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FindMovie/FindMovie.js","api/api.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","FindMovie","addMovie","useState","setMovie","setTitle","error","setError","movieSearch","name","fetch","then","response","ok","Error","status","statusText","json","getMovie","data","Title","Plot","Poster","imdbID","onSubmit","event","preventDefault","length","htmlFor","type","id","placeholder","classNames","value","onChange","target","onClick","App","state","some","elem","setState","this","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6472ca3c.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport './FindMovie.scss';\nimport PropTypes from 'prop-types';\n\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api/api';\n\nexport const FindMovie = ({ addMovie }) => {\n  const [movie, setMovie] = useState([]);\n  const [title, setTitle] = useState('');\n  const [error, setError] = useState(false);\n\n  const movieSearch = (name) => {\n    getMovie(name)\n      .then((data) => {\n        setMovie({\n          title: data.Title,\n          description: data.Plot,\n          imgUrl: data.Poster,\n          imdbUrl: `https://www.imdb.com/title/${data.imdbID}/`,\n          imdbId: data.imdbID,\n        });\n        setError(data.Error);\n      });\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={(event) => {\n          event.preventDefault();\n\n          if (!error && movie.length !== 0) {\n            addMovie(movie);\n\n            setMovie([]);\n            setTitle('');\n          }\n        }}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', { 'is-danger': error })}\n              value={title}\n              onChange={(event) => {\n                setTitle(event.target.value);\n                setError(false);\n                setMovie([]);\n              }}\n            />\n          </div>\n\n          {error && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={() => movieSearch(title)}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-primary\"\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      {(!error && movie.length !== 0) && (\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard {...movie} />\n        </div>\n      )}\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","const BASE_URL = 'https://www.omdbapi.com/?apikey=fef53722&t=';\n\nexport function getMovie(title) {\n  return fetch(BASE_URL + title)\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json();\n    });\n}\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: data,\n  };\n\n  addMovie = (movie) => {\n    const { movies } = this.state;\n\n    const inList = movies.some(elem => elem.imdbId === movie.imdbId);\n\n    if (!inList) {\n      this.setState(state => ({\n        movies: [...state.movies, movie],\n      }));\n    }\n  }\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <FindMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}